{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "This playbook will resolve any Tanium Threat Response alert associated with a Microsoft Sentinel incident.",
        "author": "Tanium"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Tanium-ResolveThreatResponseAlert",
            "type": "string"
        },
        "IntegrationAccountName": {
            "defaultValue": "Tanium-LogicApp",
            "type": "string",
            "metadata": {
                "description": "An Integration Account is required to run inline JavaScript actions"
            }
        },
        "IntegrationAccountPricingTier": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Free",
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "Specify the Pricing Tier of the Integration Account."
            }
        },
        "TaniumApiToken": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "The Tanium API Token used for this logic app. The logic app will be restricted to the level of access available to the user who generated the token."
            }
        },
        "TaniumServerHostname": {
            "defaultValue": "hostname",
            "type": "String",
            "metadata": {
                "description": "The hostname for your Tanium server e.g. tanium.example.com"
            }
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "ThreatResponseAlertsApi": "[uri(concat('https://',parameters('TaniumServerHostname')),'/plugin/products/detect3/api/v1/alerts')]"
    },
    "resources": [
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2016-06-01",
          "name": "[variables('AzureSentinelConnectionName')]",
          "location": "[resourceGroup().location]",
          "properties": {
              "displayName": "[variables('AzureSentinelConnectionName')]",
              "customParameterValues": {},
              "api": {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
              }
          }
        },
        {
            "type": "Microsoft.Logic/integrationAccounts",
            "apiVersion": "2016-06-01",
            "name": "[parameters('IntegrationAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('IntegrationAccountPricingTier')]"
            },
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Logic/integrationAccounts', parameters('IntegrationAccountName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "integrationAccount": {
                    "id": "[resourceId('Microsoft.Logic/integrationAccounts', parameters('IntegrationAccountName'))]"
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "TaniumApiToken": {
                            "type": "SecureString"
                        },
                        "ThreatResponseAlertsApi": {
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "runAfter": {
                                "Create_HTML_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Resolved Threat Response Alerts</strong></span><br>\n@{body('Create_HTML_table')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Construct_Alert_IDs_querystring": {
                            "runAfter": {
                                "For_each_alert_in_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Join",
                            "inputs": {
                                "from": "@variables('alert id queries')",
                                "joinWith": "&"
                            }
                        },
                        "Create_HTML_table": {
                            "runAfter": {
                                "Select_alert_data_for_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "HTML",
                                "from": "@body('Select_alert_data_for_comment')"
                            }
                        },
                        "Extract_Threat_Response_Alert_GUID": {
                            "runAfter": {},
                            "type": "JavaScriptCode",
                            "inputs": {
                                "code": "const sentinel = workflowContext.trigger.outputs.body\r\n\r\nreturn JSON.parse(sentinel.object.properties.relatedEntities.find(e => e.kind === \"Url\").properties.url.replace(/\\\\/g, \"\")).alert_guid"
                            }
                        },
                        "Fetch_updated_alert_states_by_GUID": {
                            "runAfter": {
                                "Resolve_Threat_Response_Alerts_by_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Content-Type": "application/json",
                                    "session": "@parameters('TaniumApiToken')"
                                },
                                "method": "GET",
                                "uri": "@{concat(parameters('ThreatResponseAlertsApi'), '?guid=', body('Extract_Threat_Response_Alert_GUID'))}"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            }
                        },
                        "For_each_alert_in_response": {
                            "foreach": "@body('Parse_Threat_Response_Alerts_response')",
                            "actions": {
                                "Append_to_Alert_ID_queries": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "alert id queries",
                                        "value": "id=@{items('For_each_alert_in_response')['id']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Alert_ID_queries": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_Alert_ID_queries": {
                            "runAfter": {
                                "Parse_Threat_Response_Alerts_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "alert id queries",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Parse_Threat_Response_Alerts_response": {
                            "runAfter": {
                                "Query_Threat_Response_Alert_GUID_to_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Query_Threat_Response_Alert_GUID_to_ID')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "alertedAt": {
                                                "type": "string"
                                            },
                                            "computerIpAddress": {
                                                "type": "string"
                                            },
                                            "computerName": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "details": {
                                                "type": "string"
                                            },
                                            "eid": {},
                                            "guid": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "integer"
                                            },
                                            "intelDocId": {
                                                "type": "integer"
                                            },
                                            "intelDocRevisionId": {},
                                            "matchType": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "type": "string"
                                            },
                                            "scanConfigId": {
                                                "type": "integer"
                                            },
                                            "scanConfigRevisionId": {
                                                "type": "integer"
                                            },
                                            "severity": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "updatedAt": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "state",
                                            "type",
                                            "guid",
                                            "priority",
                                            "severity",
                                            "intelDocId",
                                            "intelDocRevisionId",
                                            "scanConfigId",
                                            "scanConfigRevisionId",
                                            "computerName",
                                            "computerIpAddress",
                                            "matchType",
                                            "eid",
                                            "details",
                                            "alertedAt",
                                            "createdAt",
                                            "updatedAt"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Parse_Updated_Alerts_Response": {
                            "runAfter": {
                                "Fetch_updated_alert_states_by_GUID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Fetch_updated_alert_states_by_GUID')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "alertedAt": {
                                                "type": "string"
                                            },
                                            "computerIpAddress": {
                                                "type": "string"
                                            },
                                            "computerName": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "details": {
                                                "type": "string"
                                            },
                                            "eid": {},
                                            "guid": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "integer"
                                            },
                                            "intelDocId": {
                                                "type": "integer"
                                            },
                                            "intelDocRevisionId": {},
                                            "matchType": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "type": "string"
                                            },
                                            "scanConfigId": {
                                                "type": "integer"
                                            },
                                            "scanConfigRevisionId": {
                                                "type": "integer"
                                            },
                                            "severity": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "updatedAt": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "state",
                                            "type",
                                            "guid",
                                            "priority",
                                            "severity",
                                            "intelDocId",
                                            "intelDocRevisionId",
                                            "scanConfigId",
                                            "scanConfigRevisionId",
                                            "computerName",
                                            "computerIpAddress",
                                            "matchType",
                                            "eid",
                                            "details",
                                            "alertedAt",
                                            "createdAt",
                                            "updatedAt"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Query_Threat_Response_Alert_GUID_to_ID": {
                            "runAfter": {
                                "Extract_Threat_Response_Alert_GUID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Content-Type": "application/json",
                                    "session": "@parameters('TaniumApiToken')"
                                },
                                "method": "GET",
                                "uri": "@{concat(parameters('ThreatResponseAlertsApi'), '?guid=', body('Extract_Threat_Response_Alert_GUID'))}"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            }
                        },
                        "Resolve_Threat_Response_Alerts_by_ID": {
                            "runAfter": {
                                "Construct_Alert_IDs_querystring": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "state": "resolved"
                                },
                                "headers": {
                                    "Content-Type": "application/json",
                                    "session": "@parameters('TaniumApiToken')"
                                },
                                "method": "PUT",
                                "uri": "@{concat(parameters('ThreatResponseAlertsApi'), '?', body('Construct_Alert_IDs_querystring'))}"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            }
                        },
                        "Select_alert_data_for_comment": {
                            "runAfter": {
                                "Parse_Updated_Alerts_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Parse_Updated_Alerts_Response')",
                                "select": {
                                    "guid": "@item()['guid']",
                                    "id": "@item()['id']",
                                    "state": "@item()['state']"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]"
                            }
                        }
                    },
                    "TaniumApiToken": {
                        "value": "[parameters('TaniumApiToken')]"
                    },
                    "ThreatResponseAlertsApi": {
                        "value": "[variables('ThreatResponseAlertsApi')]"
                    }
                }
            }
        }
    ]
}
