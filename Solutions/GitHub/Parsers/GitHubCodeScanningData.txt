// Title:           Github Code Scanning alerts
// Author:          Prathibha Tadikamalla
// Version:         1.0
// Last Updated:    23/06/2022
// Comment:         Initial Release
//  
// DESCRIPTION:
//This parser receives the code scanning alerts from github webhook connector and parses these alters into a normalized schema. It is assumed that you are using officially supported Github webhook connector (installed from Content hub)
//
// USAGE:
// 1. Open Log Analytics/Azure Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter a Function Name.
//    It is recommended to name the Function Alias, as GithubCodeScanEvents
// 3. Kusto Functions can typically take up to 15 minutes to activate. You can then use Function Alias for other queries.
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
//
// LOG SAMPLES:
// This parser assumes the raw log are formatted as follows:
// {
//   "action": "reopened",
//   "alert": {
//     "number": 10,
//     "created_at": "2020-07-22T14:06:31Z",
//     "updated_at": "2020-07-22T14:06:31Z",
//     "url": "https://api.github.com/repos/Codertocat/Hello-World/code-scanning/alerts/10",
//     "html_url": "https://github.com/Codertocat/Hello-World/security/code-scanning/10",
//     "instances": [
//       {
//         "ref": "refs/heads/main",
//         "analysis_key": ".github/workflows/workflow.yml:upload",
//         "environment": "{}",
//         "state": "open"
//       }
//     ],
//     "state": "open",
//     "fixed_at": null,
//     "dismissed_by": null,
//     "dismissed_at": null,
//     "dismissed_reason": null,
//     "rule": {
//       "id": "Style/FrozenStringLiteralComment",
//       "severity": "note",
//       "description": "Add the frozen_string_literal comment to the top of files to help transition to frozen string literals by default.",
//       "full_description": "Add the frozen_string_literal comment to the top of files to help transition to frozen string literals by default.",
//       "tags": [
//         "style"
//       ],
//       "help": "Enabled by default | Safe `never`\n\n"
//     },
//     "tool": {
//       "name": "Rubocop",
//       "version": null
//     }
//   },
//   "ref": "refs/heads/main",
//   "commit_oid": "d6e4c75c141dbacecc279b721b8b9393d5405795",
//   "repository": {
//     "id": 186853002,
//     "node_id": "MDEwOlJlcG9zaXRvcnkxODY4NTMwMDI=",
//     "name": "Hello-World",
//     "full_name": "Codertocat/Hello-World",
//     "private": false,
//     "owner": {
//       "login": "Codertocat",
//       "id": 21031067,
//       "node_id": "MDQ6VXNlcjIxMDMxMDY3",
//       "avatar_url": "https://avatars1.githubusercontent.com/u/21031067?v=4",
//       "gravatar_id": "",
//       "url": "https://api.github.com/users/Codertocat",
//       "html_url": "https://github.com/Codertocat",
//       "followers_url": "https://api.github.com/users/Codertocat/followers",
//       "following_url": "https://api.github.com/users/Codertocat/following{/other_user}",
//       "gists_url": "https://api.github.com/users/Codertocat/gists{/gist_id}",
//       "starred_url": "https://api.github.com/users/Codertocat/starred{/owner}{/repo}",
//       "subscriptions_url": "https://api.github.com/users/Codertocat/subscriptions",
//       "organizations_url": "https://api.github.com/users/Codertocat/orgs",
//       "repos_url": "https://api.github.com/users/Codertocat/repos",
//       "events_url": "https://api.github.com/users/Codertocat/events{/privacy}",
//       "received_events_url": "https://api.github.com/users/Codertocat/received_events",
//       "type": "User",
//       "site_admin": false
//     },
//     "html_url": "https://github.com/Codertocat/Hello-World",
//     "description": null,
//     "fork": false,
//     "url": "https://api.github.com/repos/Codertocat/Hello-World",
//     "forks_url": "https://api.github.com/repos/Codertocat/Hello-World/forks",
//     "keys_url": "https://api.github.com/repos/Codertocat/Hello-World/keys{/key_id}",
//     "collaborators_url": "https://api.github.com/repos/Codertocat/Hello-World/collaborators{/collaborator}",
//     "teams_url": "https://api.github.com/repos/Codertocat/Hello-World/teams",
//     "hooks_url": "https://api.github.com/repos/Codertocat/Hello-World/hooks",
//     "issue_events_url": "https://api.github.com/repos/Codertocat/Hello-World/issues/events{/number}",
//     "events_url": "https://api.github.com/repos/Codertocat/Hello-World/events",
//     "assignees_url": "https://api.github.com/repos/Codertocat/Hello-World/assignees{/user}",
//     "branches_url": "https://api.github.com/repos/Codertocat/Hello-World/branches{/branch}",
//     "tags_url": "https://api.github.com/repos/Codertocat/Hello-World/tags",
//     "blobs_url": "https://api.github.com/repos/Codertocat/Hello-World/git/blobs{/sha}",
//     "git_tags_url": "https://api.github.com/repos/Codertocat/Hello-World/git/tags{/sha}",
//     "git_refs_url": "https://api.github.com/repos/Codertocat/Hello-World/git/refs{/sha}",
//     "trees_url": "https://api.github.com/repos/Codertocat/Hello-World/git/trees{/sha}",
//     "statuses_url": "https://api.github.com/repos/Codertocat/Hello-World/statuses/{sha}",
//     "languages_url": "https://api.github.com/repos/Codertocat/Hello-World/languages",
//     "stargazers_url": "https://api.github.com/repos/Codertocat/Hello-World/stargazers",
//     "contributors_url": "https://api.github.com/repos/Codertocat/Hello-World/contributors",
//     "subscribers_url": "https://api.github.com/repos/Codertocat/Hello-World/subscribers",
//     "subscription_url": "https://api.github.com/repos/Codertocat/Hello-World/subscription",
//     "commits_url": "https://api.github.com/repos/Codertocat/Hello-World/commits{/sha}",
//     "git_commits_url": "https://api.github.com/repos/Codertocat/Hello-World/git/commits{/sha}",
//     "comments_url": "https://api.github.com/repos/Codertocat/Hello-World/comments{/number}",
//     "issue_comment_url": "https://api.github.com/repos/Codertocat/Hello-World/issues/comments{/number}",
//     "contents_url": "https://api.github.com/repos/Codertocat/Hello-World/contents/{+path}",
//     "compare_url": "https://api.github.com/repos/Codertocat/Hello-World/compare/{base}...{head}",
//     "merges_url": "https://api.github.com/repos/Codertocat/Hello-World/merges",
//     "archive_url": "https://api.github.com/repos/Codertocat/Hello-World/{archive_format}{/ref}",
//     "downloads_url": "https://api.github.com/repos/Codertocat/Hello-World/downloads",
//     "issues_url": "https://api.github.com/repos/Codertocat/Hello-World/issues{/number}",
//     "pulls_url": "https://api.github.com/repos/Codertocat/Hello-World/pulls{/number}",
//     "milestones_url": "https://api.github.com/repos/Codertocat/Hello-World/milestones{/number}",
//     "notifications_url": "https://api.github.com/repos/Codertocat/Hello-World/notifications{?since,all,participating}",
//     "labels_url": "https://api.github.com/repos/Codertocat/Hello-World/labels{/name}",
//     "releases_url": "https://api.github.com/repos/Codertocat/Hello-World/releases{/id}",
//     "deployments_url": "https://api.github.com/repos/Codertocat/Hello-World/deployments",
//     "created_at": "2019-05-15T15:19:25Z",
//     "updated_at": "2019-05-15T15:19:27Z",
//     "pushed_at": "2019-05-15T15:20:32Z",
//     "git_url": "git://github.com/Codertocat/Hello-World.git",
//     "ssh_url": "git@github.com:Codertocat/Hello-World.git",
//     "clone_url": "https://github.com/Codertocat/Hello-World.git",
//     "svn_url": "https://github.com/Codertocat/Hello-World",
//     "homepage": null,
//     "size": 0,
//     "stargazers_count": 0,
//     "watchers_count": 0,
//     "language": null,
//     "has_issues": true,
//     "has_projects": true,
//     "has_downloads": true,
//     "has_wiki": true,
//     "has_pages": true,
//     "forks_count": 0,
//     "mirror_url": null,
//     "archived": false,
//     "disabled": false,
//     "open_issues_count": 2,
//     "license": null,
//     "forks": 0,
//     "open_issues": 2,
//     "watchers": 0,
//     "default_branch": "main"
//   },
//   "organization": {
//     "login": "Octocoders",
//     "id": 6,
//     "node_id": "MDEyOk9yZ2FuaXphdGlvbjY=",
//     "url": "https://api.github.com/orgs/Octocoders",
//     "repos_url": "https://api.github.com/orgs/Octocoders/repos",
//     "events_url": "https://api.github.com/orgs/Octocoders/events",
//     "hooks_url": "https://api.github.com/orgs/Octocoders/hooks",
//     "issues_url": "https://api.github.com/orgs/Octocoders/issues",
//     "members_url": "https://api.github.com/orgs/Octocoders/members{/member}",
//     "public_members_url": "https://api.github.com/orgs/Octocoders/public_members{/member}",
//     "avatar_url": "https://avatars0.githubusercontent.com/u/6?",
//     "description": ""
//   },
//   "sender": {
//     "login": "github",
//     "id": 9919,
//     "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
//     "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
//     "gravatar_id": "",
//     "url": "https://api.github.com/users/github",
//     "html_url": "https://github.com/github",
//     "followers_url": "https://api.github.com/users/github/followers",
//     "following_url": "https://api.github.com/users/github/following{/other_user}",
//     "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
//     "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
//     "subscriptions_url": "https://api.github.com/users/github/subscriptions",
//     "organizations_url": "https://api.github.com/users/github/orgs",
//     "repos_url": "https://api.github.com/users/github/repos",
//     "events_url": "https://api.github.com/users/github/events{/privacy}",
//     "received_events_url": "https://api.github.com/users/github/received_events",
//     "type": "Organization",
//     "site_admin": false
//   }
// }

githubscanaudit_CL 
| where action_s in ('created', 'reopened_by_user', 'closed_by_user', 'fixed', 'appeared_in_branch', 'reopened') and isnotempty(commit_oid_s)
| extend EventType='CodeScanningAlert'
| extend alert = todynamic(alert_s),
    organization = todynamic(organization_s),
    repository = todynamic(repository_s),
    sender = todynamic(sender_s) 
| extend alertcreatedate = alert.created_at, url = alert.url, commit_oid = commit_oid_s,
    alertdescription = alert.rule.description,
    toolname = alert.tool.name,
    repositoryfullname = repository.full_name,
    repositoryOwnerlogin = repository.owner.login,
    repositoryurl = repository.url,
    orglogin = organization.login,
    orgurl = organization.url,
    senderlogin = sender.login,
    sendertype = sender.type,
    action=action_s
| project-keep
    TimeGenerated,
    EventType,
    action,
    alertdescription,
    alertcreatedate,
    commit_oid,
    toolname,
    repositoryfullname,
    repositoryOwnerlogin,
    repositoryurl,
    orglogin,
    orgurl,
    senderlogin,
    sendertype 
